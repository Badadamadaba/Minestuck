buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

//apply plugin: 'forge'
apply plugin: 'net.minecraftforge.gradle'

repositories {
    maven {
        // location of the maven that hosts JEI files
        name = 'Progwml6 maven'
        url = 'http://dvs1.progwml6.com/files/maven/'
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = 'ModMaven'
        url = 'modmaven.k-4u.nl'
    }
}

version = '1.14.4-1.4.' + System.env.BUILD_NUMBER
group = 'com.mraof.minestuck'
archivesBaseName = 'Minestuck'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: project.getProperty('mc_mappings_version')

    accessTransformer = file('src/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            // It seems to default to Minestuck_main, but is not set because it's actually called Minestuck.main?
            ideaModule project.getName() +  '.main'

            // Add an uuid arg if you have specified it in a relevant gradle.properties file. NOTE: Do not use the gradle.properties file in the project! (because that one is supposed to be shared among all devs) Create one in your "gradle user home" instead.
            if (project.hasProperty('mc_uuid')) {
                args '--uuid', project.getProperty('mc_uuid')
            }

            // Add an username arg if you have specified it in a relevant gradle.properties file. Note that specifying a uuid and a non-matching username (or no username specified) may cause single-player worlds to freeze up when exiting the world.
            if (project.hasProperty('mc_username')) {
                args '--username', project.getProperty('mc_username')
            }

            mods {
                minestuck {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            // It seems to default to Minestuck_main, but is not set because it's actually called Minestuck.main?
            ideaModule project.getName() +  '.main'

            mods {
                minestuck {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            // It seems to default to Minestuck_main, but is not set because it's actually called Minestuck.main?
            ideaModule project.getName() +  '.main'

            args '--mod', 'minestuck', '--all', '--output', file('src/generated/resources/')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.getProperty('mc_forge_version')}"

	// http://dvs1.progwml6.com/files/maven
    compileOnly fg.deobf("mezz.jei:jei-${project.getProperty('mc_jei_version')}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${project.getProperty('mc_jei_version')}")
}

sourceSets {
    main {
        //TODO refactor and seperate code and resources like in other projects after merging together a lot of active branches
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'src'
        }
    }
}
